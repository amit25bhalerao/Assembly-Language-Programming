


ARM Macro Assembler    Page 1 


    1 00000000         ;WRITE AN ALP TO FIND THE NUMBER OF 1'S AND 0'S IN TWO C
                       ONSECUTIVE MEMORY LOCATIONS
    2 00000000         
    3 00000000                 AREA             PROGRAM , CODE, READONLY ; PROG
                                                            RAM PREREQUISITES I
                                                            N READONLY MEMORY
    4 00000000                 ENTRY                        ; BEGINNING OF PROG
                                                            RAM
    5 00000000         
    6 00000000 E59F1044        LDR              R1, = VALUE1 ; LOADS THE ADDRES
                                                            S OF FIRST VALUE 
    7 00000004 E5912000        LDR              R2, [R1]    ; LOAD CONTENT OF V
                                                            ALUE1 INTO R2
    8 00000008 E3A03000        LDR              R3, = 0     ; INITIALISE DUMMY 
                                                            REGISTER 
    9 0000000C E3A04000        LDR              R4, = 0     ; INITIALISE DUMMY 
                                                            REGISTER 
   10 00000010 E3A05020        LDR              R5, = 32    ; SIZE OF MEMORY BL
                                                            OCK
   11 00000014         
   12 00000014 E1B020A2 
                       LOOPNUM1
                               MOVS             R2, R2, LSR #1 ; LOGICAL SHIFT 
                                                            RIGHT 
   13 00000018 22833001        ADDCS            R3, R3, #1  ; R3 TO COUNT NUMBE
                                                            R OF 1'S (ONLY IF C
                                                            ARRY IS SET HIGH)
   14 0000001C 32844001        ADDCC            R4,#1       ; R4 TO COUNT OF NU
                                                            MBER OF 0'S (ONLY I
                                                            F CARRY IS SET LOW)
                                                            
   15 00000020 E2555001        SUBS             R5, R5, #1  ; DECREMENT SIZE OF
                                                             MEMORY BLOCK BY 1
   16 00000024 1AFFFFFA        BNE              LOOPNUM1    ; LOOK BACK TILL R2
                                                             BECOME 0
   17 00000028         
   18 00000028 E59F1020        LDR              R1, = VALUE2 ; LOADS THE ADDRES
                                                            S OF SECOND VALUE 
   19 0000002C E5912000        LDR              R2, [R1]    ; LOAD CONTENT OF V
                                                            ALUE2 INTO R2
   20 00000030 E3A05020        LDR              R5, = 32    ; SIZE OF MEMORY BL
                                                            OCK
   21 00000034         
   22 00000034 E1B020A2 
                       LOOPNUM2
                               MOVS             R2, R2, LSR #1 ; LOGICAL SHIFT 
                                                            RIGHT 
   23 00000038 22833001        ADDCS            R3, R3, #1  ; ADD IF CARRY IS S
                                                            ET TO R3 TO COUNT N
                                                            UMBER OF 1'S
   24 0000003C 32844001        ADDCC            R4,#1       ; ADD IF CARRY IS N
                                                            OT SET TO R4 TO COU
                                                            NT OF NUMBER OF 0'S
                                                            
   25 00000040 E2555001        SUBS             R5, R5, #1  ; DECREMENT SIZE OF
                                                             MEMORY BLOCK BY 1
   26 00000044 1AFFFFFA        BNE              LOOPNUM2    ; LOOK BACK TILL R2
                                                             BECOME 0 
   27 00000048         



ARM Macro Assembler    Page 2 


   28 00000048 EAFFFFFE 
                       STOP    B                STOP        ; STOP B STOP
   29 0000004C         
   30 0000004C 00000000 
              00000000         AREA             WRITEDATA, DATA, READWRITE
   31 00000000 40000000 
                       VALUE1  DCD              0X40000000  ; GIVEN NUMBER1 IN 
                                                            32 BIT MEMORY
   32 00000004 40000004 
                       VALUE2  DCD              0X40000004  ; GIVEN NUMBER2 IN 
                                                            32 BIT MEMORY
   33 00000008                 END                          ; END OF PROGRAM
Command Line: --debug --xref --apcs=interwork --depend=.\program8.d -o.\program
8.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philip
s --predefine="__EVAL SETA 1" --list=.\program8.lst PROGRAM8.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LOOPNUM1 00000014

Symbol: LOOPNUM1
   Definitions
      At line 12 in file PROGRAM8.S
   Uses
      At line 16 in file PROGRAM8.S
Comment: LOOPNUM1 used once
LOOPNUM2 00000034

Symbol: LOOPNUM2
   Definitions
      At line 22 in file PROGRAM8.S
   Uses
      At line 26 in file PROGRAM8.S
Comment: LOOPNUM2 used once
PROGRAM 00000000

Symbol: PROGRAM
   Definitions
      At line 3 in file PROGRAM8.S
   Uses
      None
Comment: PROGRAM unused
STOP 00000048

Symbol: STOP
   Definitions
      At line 28 in file PROGRAM8.S
   Uses
      At line 28 in file PROGRAM8.S
Comment: STOP used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

VALUE1 00000000

Symbol: VALUE1
   Definitions
      At line 31 in file PROGRAM8.S
   Uses
      At line 6 in file PROGRAM8.S
Comment: VALUE1 used once
VALUE2 00000004

Symbol: VALUE2
   Definitions
      At line 32 in file PROGRAM8.S
   Uses
      At line 18 in file PROGRAM8.S
Comment: VALUE2 used once
WRITEDATA 00000000

Symbol: WRITEDATA
   Definitions
      At line 30 in file PROGRAM8.S
   Uses
      None
Comment: WRITEDATA unused
3 symbols
340 symbols in table
